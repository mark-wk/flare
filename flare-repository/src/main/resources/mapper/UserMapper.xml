<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flare.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.flare.model.User">
    <id column="test_id" jdbcType="BIGINT" property="testId" />
    <result column="tenant_id" jdbcType="BIGINT" property="tenantId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="test_type" jdbcType="INTEGER" property="testType" />
    <result column="test_date" jdbcType="TIMESTAMP" property="testDate" />
    <result column="role" jdbcType="BIGINT" property="role" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Base_Column_List">
    test_id, tenant_id, name, age, test_type, test_date, role, phone
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where test_id = #{testId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where test_id = #{testId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.flare.model.User">
    insert into user (test_id, tenant_id, name, 
      age, test_type, test_date, 
      role, phone)
    values (#{testId,jdbcType=BIGINT}, #{tenantId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{testType,jdbcType=INTEGER}, #{testDate,jdbcType=TIMESTAMP}, 
      #{role,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.flare.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testId != null">
        test_id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="testType != null">
        test_type,
      </if>
      <if test="testDate != null">
        test_date,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testId != null">
        #{testId,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="testType != null">
        #{testType,jdbcType=INTEGER},
      </if>
      <if test="testDate != null">
        #{testDate,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null">
        #{role,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.flare.model.User">
    update user
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="testType != null">
        test_type = #{testType,jdbcType=INTEGER},
      </if>
      <if test="testDate != null">
        test_date = #{testDate,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where test_id = #{testId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flare.model.User">
    update user
    set tenant_id = #{tenantId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      test_type = #{testType,jdbcType=INTEGER},
      test_date = #{testDate,jdbcType=TIMESTAMP},
      role = #{role,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR}
    where test_id = #{testId,jdbcType=BIGINT}
  </update>
</mapper>