#app
server.port=8080
server.contextPath=/api/v1
#spring.http.encoding.force=true
server.tomcat.uri-encoding=UTF-8

#spring
spring.devtools.restart.enabled=false

# mysql DATABASE CONFIG
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=true
spring.datasource.username=test
spring.datasource.password=KSstP53KZE30cp0GaBcYFW2RJW9ZjQMZprAEpMtX6rff18xSnUWhux3mZpuhP3qe4NF+tc3uyNq4fEIajCUX0A==
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 生成的公钥
public-key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALhSWQuQcazKrJjto1ATanTvQvU0z27zjEwhLHksO0rL7HRxrz1ARlYCI42YGZvGX68cuWHdq6Kr+A/vfTX2tnECAwEAAQ==

# 配置 connection-properties，启用加密，配置公钥。
spring.datasource.druid.connection-properties=config.decrypt=true;config.decrypt.key=${public-key}
# 启用ConfigFilter
spring.datasource.druid.filter.config.enabled=true
#连接池配置
spring.datasource.druid.initial-size=10
spring.datasource.druid.max-active=50
#spring.datasource.druid.min-idle=
spring.datasource.druid.max-wait=1000000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#和上面的等价
#spring.datasource.druid.max-open-prepared-statements=
spring.datasource.druid.validation-query=SELECT 'x'
#spring.datasource.druid.validation-query-timeout=
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
#spring.datasource.druid.time-between-eviction-runs-millis=
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=1800000
spring.datasource.druid.max-evictable-idle-time-millis=3600000
#配置多个英文逗号分隔
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,slf4j
spring.datasource.druid.connect-properties.=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.druid.use-global-data-source-stat=true
#监控配置
# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#是否启用StatFilter默认值true
#spring.datasource.druid.web-stat-filter.enabled=
#spring.datasource.druid.web-stat-filter.url-pattern=
#spring.datasource.druid.web-stat-filter.exclusions=
#spring.datasource.druid.web-stat-filter.session-stat-enable=
#spring.datasource.druid.web-stat-filter.session-stat-max-count=
#spring.datasource.druid.web-stat-filter.principal-session-name=
#spring.datasource.druid.web-stat-filter.principal-cookie-name=
#spring.datasource.druid.web-stat-filter.profile-enable=

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#是否启用StatViewServlet默认值true
#spring.datasource.druid.stat-view-servlet.enabled=
#spring.datasource.druid.stat-view-servlet.url-pattern=
#spring.datasource.druid.stat-view-servlet.reset-enable=
#spring.datasource.druid.stat-view-servlet.login-username=
#spring.datasource.druid.stat-view-servlet.login-password=
#spring.datasource.druid.stat-view-servlet.allow=
#spring.datasource.druid.stat-view-servlet.deny=

# JPA
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop

# Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
spring.datasource.druid.aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
# 如果spring.datasource.druid.aop-patterns要代理的类没有定义interface请设置spring.aop.proxy-target-class=true

#redis配置
# redis数据库索引（默认为0），我们使用索引为3的数据库，避免和其他数据库冲突
spring.redis.database=3
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=test
# redis连接超时时间（单位为毫秒）
spring.redis.timeout=60000
# redis连接池配置
# 最大可用连接数（默认为8，负数表示无限）
spring.redis.pool.max-active=8
# 最大空闲连接数（默认为8，负数表示无限）
spring.redis.pool.max-idle=8
# 最小空闲连接数（默认为0，该值只有为正数才有作用）
spring.redis.pool.min-idle=0
# 从连接池中获取连接最大等待时间（默认为-1，单位为毫秒，负数表示无限）
spring.redis.pool.max-wait=-1

#mybatis
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
mybatis.type-aliases-package=com.flare.model

#日志
#logging.config=classpath:log4j2.properties
#
#logging.level.root=info
#logging.level.org.mybatis=info
#logging.level.java.sql=debug
#logging.level.org.springframework.web=info
#logging.level.com.shinemi.realiart.controller=info
#logging.level.com.shinemi.realiart.service=debug
#logging.level.com.shinemi.realiart.mapper=debug

#logging.path=/uni/logger/

#启用shutdown
endpoints.shutdown.enabled=true
endpoints.shutdown.path=/custompath
endpoints.actuator.sensitive=true

#验证用户名
security.user.name=admin
#验证密码
security.user.password=secret
#角色
management.security.role=SUPERUSER
#指定shutdown endpoint的路径
#也可以统一指定所有endpoints的路径
#指定管理端口和IP
management.port=8081
management.address=127.0.0.1
management.context-path=/manage
management.security.enabled=false
#actuator的metrics接口是否需要安全保证
endpoints.metrics.sensitive=false
endpoints.metrics.enabled=true
#actuator的health接口是否需要安全保证
endpoints.health.sensitive=false
endpoints.health.enabled=true

#security:
#  user:
#    name: admin #验证用户名
#    password: secret #验证密码
##角色
#management:
##  context-path: /manage
#  port: 8081
#  address: 127.0.0.1
#  security:
#    role: SUPERUSER
#安全关闭应用demo curl -u admin:secret -X POST http://127.0.0.1:8081/manage/artshut

#javamelody监控插件配置
#javamelody.advisor-auto-proxy-creator-enabled=false

# Enable JavaMelody auto-configuration (optional, default: true)
javamelody.enabled=true
# Data source names to exclude from monitoring (optional, comma-separated)
javamelody.excluded-datasources=
# Enable monitoring of Spring services and controllers (optional, default: true)
javamelody.spring-monitoring-enabled=true
# Initialization parameters for JavaMelody (optional)
# See: https://github.com/javamelody/javamelody/wiki/UserGuide#6-optional-parameters
#    log http requests
javamelody.init-parameters.log=true
#    to exclude images, css, fonts and js urls from the monitoring:
# javamelody.init-parameters.url-exclude-pattern=(/webjars/.*|/css/.*|/images/.*|/fonts/.*|/js/.*)
#    to add basic auth:
# javamelody.init-parameters.authorized-users=admin:pwd
#    to change the default storage directory:
# javamelody.init-parameters.storage-directory=/tmp/javamelody
#    to change the default "/monitoring" path
# javamelody.init-parameters.monitoring-path=/admin/performance
#自定义参数
